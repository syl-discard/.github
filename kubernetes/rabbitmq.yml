# RabbitMQ broker
# ---
# apiVersion: v1
# kind: Namespace
# metadata:
#     name: rabbits
#     labels:
#         name: rabbits

---
apiVersion: v1
kind: ServiceAccount
metadata:
    name: rabbitmq

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
    name: rabbitmq
rules:
    - apiGroups:
          - ""
      resources:
          - endpoints
      verbs:
          - get
          - list
          - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: rabbitmq
    namespace: default
subjects:
    - kind: ServiceAccount
      name: rabbitmq
      namespace: default
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: rabbitmq

---
apiVersion: v1
kind: ConfigMap
metadata:
    name: rabbitmq-config
data:
    enabled_plugins: |
        [rabbitmq_federation,rabbitmq_management,rabbitmq_peer_discovery_k8s].
    rabbitmq.conf: |
        loopback_users.guest = false
        listeners.tcp.default = 5672

        cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
        cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
        cluster_formation.k8s.address_type = hostname
        cluster_formation.node_cleanup.only_log_warning = true
        ##cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
        ##cluster_formation.classic_config.nodes.1 = rabbit@rabbitmq-0.rabbitmq.rabbits.svc.cluster.local
        ##cluster_formation.classic_config.nodes.2 = rabbit@rabbitmq-1.rabbitmq.rabbits.svc.cluster.local
        ##cluster_formation.classic_config.nodes.3 = rabbit@rabbitmq-2.rabbitmq.rabbits.svc.cluster.local

---
apiVersion: v1
kind: Secret
metadata:
    name: rabbit-secret
type: Opaque
data:
    # echo -n "cookie-value" | base64
    RABBITMQ_ERLANG_COOKIE: dmVyeS1zZWNyZXQtc2VjcmV0LW5hbWU=

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: rabbitmq
spec:
    serviceName: rabbitmq
    replicas: 3
    selector:
        matchLabels:
            app: rabbitmq
    template:
        metadata:
            labels:
                app: rabbitmq
        spec:
            serviceAccountName: rabbitmq
            initContainers:
                - name: config
                  image: busybox
                  command:
                      [
                          "/bin/sh",
                          "-c",
                          "cp /tmp/config/rabbitmq.conf /config/rabbitmq.conf && ls -l /config/ && cp /tmp/config/enabled_plugins /etc/rabbitmq/enabled_plugins",
                      ]
                  volumeMounts:
                      - name: config
                        mountPath: /tmp/config/
                        readOnly: false
                      - name: config-file
                        mountPath: /config/
                      - name: plugins-file
                        mountPath: /etc/rabbitmq/
            containers:
                - name: rabbitmq
                  image: rabbitmq:3.8-management
                  resources:
                      limits:
                          cpu: 200m
                          memory: 500Mi
                          ephemeral-storage: 50Mi
                      requests:
                          cpu: 200m
                          memory: 500Mi
                          ephemeral-storage: 50Mi
                  ports:
                      - containerPort: 4369
                        name: discovery
                      - containerPort: 5672
                        name: amqp
                      - containerPort: 15672
                        name: management
                  env:
                      - name: RABBIT_POD_NAME
                        valueFrom:
                            fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                      - name: RABBIT_POD_NAMESPACE
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.namespace
                      - name: RABBITMQ_NODENAME
                        value: rabbit@$(RABBIT_POD_NAME).rabbitmq.$(RABBIT_POD_NAMESPACE).svc.cluster.local
                      - name: RABBITMQ_USE_LONGNAME
                        value: "true"
                      - name: RABBITMQ_CONFIG_FILE
                        value: "/config/rabbitmq"
                      - name: RABBITMQ_ERLANG_COOKIE # this will need to be configured through a file if migrating >= rabbitmq:3.9
                        valueFrom:
                            secretKeyRef:
                                name: rabbit-secret
                                key: RABBITMQ_ERLANG_COOKIE
                      - name: K8S_HOSTNAME_SUFFIX
                        value: .rabbitmq.$(RABBIT_POD_NAMESPACE).svc.cluster.local
                  volumeMounts:
                      - name: data
                        mountPath: /var/lib/rabbitmq
                        readOnly: false
                      - name: config-file
                        mountPath: /config/
                      - name: plugins-file
                        mountPath: /etc/rabbitmq/
            volumes:
                - name: config-file
                  emptyDir: {}
                - name: plugins-file
                  emptyDir: {}
                - name: config
                  configMap:
                      name: rabbitmq-config
                      defaultMode: 0755
    volumeClaimTemplates:
        - metadata:
              name: data
          spec:
              accessModes: ["ReadWriteOnce"]
              storageClassName: "standard"
              resources:
                  requests:
                      storage: 50Mi
---
apiVersion: v1
kind: Service
metadata:
    name: rabbitmq
spec:
    clusterIP: None
    ports:
        - port: 4369
          targetPort: 4369
          name: discovery
        - port: 5672
          targetPort: 5672
          name: amqp
        - port: 15672
          targetPort: 15672
          name: management
    selector:
        app: rabbitmq
