---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: message-service
    namespace: default
spec:
    replicas: 1
    selector:
        matchLabels:
            app: message-service
    template:
        metadata:
            labels:
                app: message-service
        spec:
            # initContainers: # this is for when you use a local db
            #     - name: setup-db
            #       image: cassandra:5.0
            #       command: ["bash", "-c"]
            #       args:
            #           - |
            #               date; until cqlsh message-db -e "DESCRIBE KEYSPACES;"; do echo waiting for cassandra; sleep 2; done; cqlsh message-db -e "CREATE KEYSPACE IF NOT EXISTS messages WITH REPLICATION = {'class':'NetworkTopologyStrategy','DC1':1}; CREATE TABLE IF NOT EXISTS messages.messages (id uuid,message text, serverid uuid, userid uuid, PRIMARY KEY (id));"
            containers:
                - name: message-service
                  image: ghcr.io/syl-discard/message-service:1.0.2
                  imagePullPolicy: Always
                  ports:
                      - containerPort: 8080
                        name: api
                  resources:
                      limits:
                          cpu: 200m
                          memory: 500Mi
                      requests:
                          cpu: 200m
                          memory: 500Mi
                  env:
                      - name: RABBITMQ_SERVER_ADDRESS
                        value: "amqp://guest:guest@rabbitmq:5672/"
                      - name: DATABASE_URL
                        valueFrom: # https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#define-a-container-environment-variable-with-data-from-a-single-secret
                            secretKeyRef:
                                name: message-db
                                key: url
                      - name: ASTRA_DATABASE_ID
                        valueFrom:
                            secretKeyRef:
                                name: message-db
                                key: astra-id
                      - name: ASTRA_TOKEN
                        valueFrom:
                            secretKeyRef:
                                name: message-db
                                key: astra-token
                      - name: DATABASE_PROVIDER
                        value: "astra"

---
apiVersion: v1
kind: Service
metadata:
    name: message-service
    namespace: default
spec:
    selector:
        app: message-service
    ports:
        - port: 8080
          targetPort: 8080
          name: api
          protocol: TCP
